clc;
clear all;



%{
reading audio vector from wavefile recorded in audacity s/w -->
creating player object from audio vector---->
playing audio using playing object--->

save audio-vector into mat-file-->

loading audio-vector into octave-workspace from mat-file-->
creating player object from audio vector---->
playing audio using playing object--->


 info = audioinfo("test_audacity.wav")

  [wave_audio, Fs] = audioread("test_audacity.wav");
  whos
  player_obj = audioplayer(wave_audio,Fs);
  play(player_obj);
  while(isplaying(player_obj))
      % Waiting for sound to finish
  endwhile
  save wave_audiofile.mat  wave_audio  Fs;
  clear wave_audio Fs info player;



  load wave_audiofile.mat;
  whos
  player_obj = audioplayer(wave_audio, Fs);
  disp('playing the file');
  play(player_obj);
   while(isplaying(player_obj))
      % Waiting for sound to finish
  endwhile
  clear wave_audio Fs player_obj;

%}













%{
to prevent aliasing, ADCs are often preceded by LPFs that eliminate frequencies above the Nyquist frequency before audio reaches ADC.
This will prevent unwanted super high frequencies in the original audio from causing aliasing.
Early filters could taint the audio, but this problem is being minimized as better technology is introduced.

The most common sample rate  is 44.1 kHz, or 44,100 samples per second.
Humans can hear frequencies between 20 Hz and 20 kHz.
By placing the Nyquist frequency outside of our hearing range -
The sample rate of 44.1 kHz technically allows for audio at frequencies up to 22.05 kHz to be recorded.
While 44.1 kHz is an acceptable sample rate for consumer audio, there are instances in which higher sample rates are used.
Some were introduced during the early days of digital audio when powerful anti-aliasing filters were expensive.
%}


%{

% single channel --- this is not working- findout-Why???

Fs=44100;
recorder_obj = audiorecorder(Fs,16);
disp('single-channel recording@44.1Khz: start speaking');
recordblocking(recorder_obj,5);
disp('End of recording');
disp('playing now');
player_obj = play(recorder_obj);
while(isplaying(player_obj))
      % Waiting for sound to finish
endwhile

Audio_sampled_44100 = getaudiodata(recorder_obj); %y = getaudiodata(recorder,dataType)
save Audio_sampled_44100.mat  Audio_sampled_44100  Fs;
%whos;
clear Audio_sampled_44100 Fs ;
clear recorder_obj player_obj;


load Audio_sampled_44100.mat;
%whos
Fs
player_obj = audioplayer(Audio_sampled_44100,Fs,16); %player = audioplayer(Y,Fs,nBits,ID) or player = audioplayer(recorder,ID)
disp('playing the file: audioplayer fn');
play(player_obj);
while(isplaying(player_obj))
      % Waiting for sound to finish
endwhile
clear Audio_sampled_44100 Fs player_obj;
%}







%{
Fs=44100;
recorder_obj = audiorecorder(Fs,16,2);
disp('two-channelsrecording: start speaking');
recordblocking(recorder_obj,5);
disp('End of recording');
disp('playing now');
player_obj = play(recorder_obj);
while(isplaying(player_obj))
      % Waiting for sound to finish
endwhile

Audio_sampled_44100 = getaudiodata(recorder_obj); %y = getaudiodata(recorder,dataType)
save Audio_sampled_44100.mat  Audio_sampled_44100  Fs;
%whos;
clear Audio_sampled_44100 Fs ;
clear recorder_obj player_obj;

load Audio_sampled_44100.mat;
%whos
Fs
player_obj = audioplayer(Audio_sampled_44100,Fs,16); %player = audioplayer(Y,Fs,nBits,ID) or player = audioplayer(recorder,ID)
disp('playing the file: audioplayer fn');
play(player_obj);
while(isplaying(player_obj))
      % Waiting for sound to finish
endwhile
clear Audio_sampled_44100 Fs player_obj;
%}








%{
freq 48 khz is often used in “professional audio”contexts(ex:in audio for video) more than music contexts.
Some engineers choose to work in even higher sample rates, which tend to be multiples of either 44.1 kHz or 48 kHz.
Sample rates of 88.2 kHz, 96 kHz, 176.4 kHz, and 192 kHz result in higher Nyquist frequencies, meaning supersonic frequencies can be recorded and recreated.
%}


%{
Fs=88200;
%recorder_obj = audiorecorder(Fs,16);
recorder_obj = audiorecorder(Fs,16,2);
disp('recording @88.2Khz:start speaking');
recordblocking(recorder_obj,1);
disp('End of recording');
disp('playing now');
player_obj = play(recorder_obj);
while(isplaying(player_obj))
      % Waiting for sound to finish
endwhile


Audio_sampled_88200 = getaudiodata(recorder_obj); %y = getaudiodata(recorder,dataType)
save Audio_sampled_88200.mat  Audio_sampled_88200  Fs;
%whos;
clear OriginalAudio Fs ;
clear recorder_obj player_obj;


load Audio_sampled_88200.mat;
%whos
player_obj = audioplayer(Audio_sampled_88200,Fs,16); %player = audioplayer(Y,Fs,nBits,ID) or player = audioplayer(recorder,ID)
disp('playing the file: audioplayer fn');
play(player_obj);
while(isplaying(player_obj))
      % Waiting for sound to finish
endwhile
clear Audio_sampled_88200 Fs player_obj;
%}







%
%comparing 44.1k sampling with 88.2k sampling  : observe audio quality

load Audio_sampled_44100.mat;
player_obj = audioplayer(Audio_sampled_44100,Fs,16);
disp('playing the file: Audio_sampled_44100.mat ');
play(player_obj);
while(isplaying(player_obj))
      % Waiting for sound to finish
endwhile
clear Audio_sampled_44100 Fs player_obj;


load Audio_sampled_88200.mat;
player_obj = audioplayer(Audio_sampled_88200,Fs,16);
disp('playing the file: Audio_sampled_88200.mat ');
play(player_obj);
while(isplaying(player_obj))
      % Waiting for sound to finish
endwhile
clear Audio_sampled_88200 Fs player_obj;

%


